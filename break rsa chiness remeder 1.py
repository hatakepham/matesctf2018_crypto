from Crypto.Util.number import *
from gmpy2 import *

e = 5 
# c1 = 261345950255088824199206969589297492768083568554363001807292202086148198677263604958247638518239089545015544140878441375704999371548235205708718116265184277053405937898051706510050325657424248032017194168466912140157665066494528590260879287464030275170787644749401275343677539640347609231708327119700420050952
# n1 = 1001191535967882284769094654562963158339094991366537360172618359025855097846977704928598237040115495676223744383629803332394884046043603063054821999994629411352862317941517957323746992871914047324555019615398720677218748535278252779545622933662625193622517947605928420931496443792865516592262228294965047903627
# c2 = 147535246350781145803699087910221608128508531245679654307942476916759248448374688671157343167317710093065456240596223287904483080800880319712443044372346198448258006286828355244986776657425121775659144630571637596283100201930037799979864768887420615134036083295810488407488056595808231221356565664602262179441
# n2 = 405864605704280029572517043538873770190562953923346989456102827133294619540434679181357855400199671537151039095796094162418263148474324455458511633891792967156338297585653540910958574924436510557629146762715107527852413979916669819333765187674010542434580990241759130158992365304284892615408513239024879592309 
# c3 = 633230627388596886579908367739501184580838393691617645602928172655297372282390454586345936209841638502749645277206386289490247066959822668419069562380546618337543323956757811325946190976649051724173510367477564435069180291575386473277111391106753472257905377429144209593931226163885326581862398737742032667573
# n3 = 1204664380009414697639782865058772653140636684336678901863196025928054706723976869222235722439176825580211657044153004521482757717615318907205106770256270292154250168657084197056536811063984234635803887040926920542363612936352393496049379544437329226857538524494283148837536712608224655107228808472106636903723 

#Note that: C = pow(M,3,N1*N2*n3)
#Now we're trying to find C = (T1 + T2 + T3) mod (N1*N2*N3)

c1= "74a61efe7e620d2d4b5c961278efbca38d3a4c7ea4d23b862b4352e9fbed0dcd9ec0e43c11bd4ecaed7b53022ec092506af7eee9071d550b13e969399d5d95e6088930ac1d138b9123c64109a1742bfaed711fc0e911b88a8629569f13dcd670b0a88426d4a801354d11ad2ae166ef55b742105f0d37a05d175693af67f63ea0"
n1= "9f9432fa77e4e4580a48de7072d43680b07bf77db03de916bf166ed59b73a470c51defba1466515b903976adcee89c035b424c85a0a26f70c6a4651e6463c35d5ce6d3c6df0a7f371a14a2064380eb6e462cb9da54e1fbc81452a3392ccbaa387ab7e027068230d41dcdc75491b1026a337303b080c6e571f7c29408ff7c5e25"
c2= "a60b84ec917122f7760e7390992c6e724f31288749f00b5aeb1ed01d3e8d7f467ad656c022a5bb02e7274720d79ec2d724ac67b50c5d18bc1392864c466c25ade529fbab5b096e592ad02bc2f8bc57a506d10bae809c15b0ff53c3679da979658d51273490701edea4b8fa458779cf4876b3ab1ffaac76eca9f23d314bde2535"
n2= "bae5121507d5bea683200f2a6f49bef7c0b7b30cbe40a02ead90701cd16d4729073a5051d5d2527156d82c851f85aa5b6500967d0b1db46eb4b840b93faf6428bc4c571dfa7d2788adc60d5df3c66f3d609aa36e249d68946a628dae6dfd2c4b3e3b048d5859a516b8e332050c22af0a45b78db92293e3401d142da359a4a927"
c3= "6d24a2bd871269cb2c64e32b66efd1f42a75bc8d9a52a5d43c39440dcd84ec2b755f54decd273a4f90e28c7e3fbc708392d2a938a03a542c3ab38b0f5ee5571ba5af43dea65c1209151984c041f955f1ad20079ac060caa88abddfec88f442cfd55f79f5423e0028f739671fe3a30195ed62c921407559356a2b7fecb8ab7cd2"
n3= "d00ad8f83693c6348325795f47e5bc2489f2ad35eeb6f76dd16e65bfa4c2ebacc4b69566857bb1b4a9984f8def99e9d8de6fff48d67fd6bd345b5c5a2e44754b2ae3870498923ec93d52ab5ee34ad6965917bad765ac221af56c1052ef604dda2f366ef0ec7d6eb685ab782ec43b4767288824610ec71311c043947c50a637a3"
c4= "953e6a7ecae1415ba56243edd04d6e95a9fb9664dea1a0f706b2decb7e0436aed6e9e10513c9eacf7e62e34bf32a830e40714cb5ef93837a292afdbc7fee4e2fb946261ed4656b963ff322fd48c60d8ec9d0e4079d25047f14ac3a9e41f8221ac9fba8a3f84a56efa5c38249dffbf2f65ccc9adbe015d40e4a3c6347ae1c1b9a"
n4= "b10c9afe1be851fcb0e15c7cb5c058b07b800a12f5fc00db431ac62f671a87afdf0e12ddfaaf99f2a93b6c597c799120fe8202976559dd1adcfefe31e7ed01cbf0e9541d4c225c0e9ede16dbffc430efa1a311c1a6670ce5a1b994109c2ec4714f5f446fb3d39d54183f6a64345eb1e0d421cdd5526874d2c537f44e77d277ef"
c5= "b5b0121170bec9a35e8cad0632da03f955e6b06865b6a0978627dfe3b8e3c9c66f0b34372982b00c4b9efc6be73ba85feaea097b99fb014c9c6d665739fc6fb30ba65f8e201579e670f389fb5c356f80058dddcf80fc8f35ee2f75ae79fc4334a8453d026984fa300930537941771bb8c97d95fa6f75f5676cb4771b2d016166"
n5= "c769fe1e72637a2c1e644932ffd5a6947a8f06c384ab6d2510a79c4955383f3d9f563fb2f3a8261af7e686f8955c21fc8a546e06042e76b9d231a089f0ae57b3d9d704767abd3e0293100f80653d3facd9a6a22b716d760a04c4cf210fef3c83843c2ed9ce152989897d204e753de770b2dbfbe952c57a62530fbc84a79b6ab5"

c1 = int(c1,16)
c2 = int(c2,16)
c3 = int(c3,16)
c4 = int(c4,16)
c5 = int(c5,16)


n1 = int(n1,16)
n2 = int(n2,16)
n3 = int(n3,16)
n4 = int(n4,16)
n5 = int(n5,16)


#T1 = C1*(N2*N3)*invert(N2*N3,N1)
t1 = c1*(n2*n3*n4*n5)*invert(n2*n3*n4*n5,n1)
# print "T1 = ",t1

#T2 = C2*(N1*N3)*invert(N1*N3,N2)
t2 = c2*(n1*n3*n4*n5)*invert(n1*n3*n4*n5,n2)
# print "T2 = ",t2

#T3 = C3*(N2*N1)*invert(N2*N1,N3)
t3 = c3*(n1*n2*n4*n5)*invert(n1*n2*n4*n5,n3)
# print "T3 = ",t3
t4 = c4*(n1*n2*n3*n5)*invert(n1*n2*n3*n5,n4)

t5 = c5*(n1*n2*n3*n4)*invert(n1*n2*n3*n4,n5)
#Got T1,T2,T3 , Now calculate C 
c = (t1 + t2 + t3 + t4 + t5) % (n1*n2*n3*n4*n5)
# print "C = ",c

#Got C, calculate M
m = str(iroot(c,5)).split('z(')[1].split('L)')[0]
print "M = ",m
print "M in plaintext: ",long_to_bytes(m)